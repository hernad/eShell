steps:
- script: |
    #set -e
    #sudo apt-get update -y
    #sudo apt-get install -y pkg-config dbus
    #if [[ "${VSCODE_ARCH}" == "ia32" ]]; then
    #   sudo apt-get install -y libx11-dev:i386 libxkbfile-dev:i386 libsecret-1-dev:i386 libxss1:i386 libgtk-3-0:i386
    #else
    #   sudo apt-get install -y libx11-dev libxkbfile-dev libsecret-1-dev libxss1 libgtk-3-0
    #fi

    #pkg-config --cflags gio-2.0 gobject-2.0 glib-2.0 libsecret-1
    #output: -pthread -I/usr/include/libsecret-1 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include

    sudo yum install  -y libX11-devel libxkbfile-devel libsecret-devel fakeroot rpm

  displayName: yum install dependencies

# https://nodejs.org/dist/index.json
# https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/NodeToolV0/nodetool.ts
- task: NodeTool@0
  inputs:
    versionSpec: "12.14.0"
- script: |
    npm install -g yarn
  displayName: Install yarn with npm
- script: |
    #which node
    #node --version
    # npm_config_arch=(x64|ia32) => 32/64 bit node_modules build
    export npm_config_arch="${VSCODE_ARCH}"
    ELECTRON_VERSION=`cat .yarnrc | grep target | sed -e "s/target //" | sed -e 's/"//g'`
    echo "electron version = ${ELECTRON_VERSION}"
    ARCH="${VSCODE_ARCH}"

    #echo ===================== debug node build native errors common.gypi electron 3.0.13 ===================================
    #yarn add native-watchdog@1.0.0
    #cat ~/.node-gyp/iojs-3.0.13/common.gypi

    if [[ "${VSCODE_ARCH}" == "ia32" ]]; then
      export PKG_CONFIG_PATH="/usr/lib/i386-linux-gnu/pkgconfig"
      # yarn add --dev electron-rebuild
      # https://github.com/electron/electron/blob/master/docs/tutorial/using-native-node-modules.md
      # node_modules/.bin/electron-rebuild --version ${ELECTRON_VERSION} --arch ia32
    fi

    yarn
  displayName: yarn install dependencies, build native node_modules for $(VSCODE_ARCH)

- script: |
    npx gulp vscode-linux-${VSCODE_ARCH}-min
    npx gulp vscode-linux-${VSCODE_ARCH}-build-rpm
    npx gulp vscode-linux-${VSCODE_ARCH}-build-deb
  displayName: "Linux build $(VSCODE_ARCH) rpm and deb"

- script: |
    ./upload_bintray_linux.sh
  env:
    BINTRAY_API_KEY: $(BINTRAY_BRINGOUT_API_KEY)
  displayName: "upload eShell linux $(VSCODE_ARCH)"
