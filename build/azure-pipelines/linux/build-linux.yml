steps:
- script: |
    set -e
    sudo apt-get update
    apt-get install -y pkg-config dbus
    if [[ "${VSCODE_ARCH}" == "ia32" ]]; then
       sudo apt-get install -y libx11-dev:i386 libxkbfile-dev:i386 libsecret-1-dev:i386 libxss1:i386 libgtk-3-0:i386
    else
       sudo apt-get install -y libx11-dev libxkbfile-dev libsecret-1-dev libxss1 libgtk-3-0
    endif
  displayName: apt-get install dependencies

# https://nodejs.org/dist/index.json
# https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/NodeToolV0/nodetool.ts
- task: NodeTool@0
  inputs:
    versionSpec: "8.15.0"
- script: |
    npm install -g yarn
  displayName: Install yarn with npm
- script: |
    #which node
    #node --version
    echo ===================== debug node build native errors common.gypi electron 3.0.13 ===================================
    yarn add native-watchdog@1.0.0
    cat ~/.node-gyp/iojs-3.0.13/common.gypi
    yarn
  displayName: Install Dependencies
#- script: |
#    yarn gulp electron-${VSCODE_ARCH}
#  displayName: Download Electron

- script: |
    export npm_config_arch="${VSCODE_ARCH}"
    if [[ "${VSCODE_ARCH}" == "ia32" ]]; then
      export PKG_CONFIG_PATH="/usr/lib/i386-linux-gnu/pkgconfig"
      yarn add --dev electron-rebuild
      ELECTRON_VERSION=`cat .yarnrc | grep target | sed -e "s/target //" | sed -e 's/"//g'`
      echo "electron version ${ELECTRON_VERSION}"
      # https://github.com/electron/electron/blob/master/docs/tutorial/using-native-node-modules.md
      node_modules/.bin/electron-rebuild --version ${ELECTRON_VERSION} --arch ia32
    fi
    ARCH="${VSCODE_ARCH}"

    npx gulp vscode-linux-${VSCODE_ARCH}-min
    npx gulp vscode-linux-${VSCODE_ARCH}-build-rpm
    npx gulp vscode-linux-${VSCODE_ARCH}-build-deb
  displayName: "Linux build $(VSCODE_ARCH) rpm and deb"

- script: |
    ./upload_bintray_linux.sh
  env:
    BINTRAY_API_KEY: $(BINTRAY_API_KEY)
  displayName: "upload eShell linux $(VSCODE_ARCH)"
